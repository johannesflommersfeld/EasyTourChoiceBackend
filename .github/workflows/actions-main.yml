# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-24.04-arm64

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Get version
      run: |
        VERSION_PREFIX=$(grep -oPm1 "(?<=<VersionPrefix>)[^<]+" ./EasyTourChoice.API/EasyTourChoice.API.csproj)
        VERSION_SUFFIX=$(grep -oPm1 "(?<=<VersionSuffix>)[^<]+" ./EasyTourChoice.API/EasyTourChoice.API.csproj || true)
        if [ -z "$VERSION_SUFFIX" ]; then
          echo "VERSION=$VERSION_PREFIX" >> $GITHUB_ENV
          echo "RELEASE_IMAGE=true" >> $GITHUB_ENV
          echo "Resolved version: $VERSION"
        elif [[ "$VERSION_SUFFIX" == *"rc"* ]]; then
          echo "VERSION=$VERSION_PREFIX-$VERSION_SUFFIX" >> $GITHUB_ENV
          echo "RELEASE_IMAGE=true" >> $GITHUB_ENV
          echo "Resolved version: $VERSION"
        else
          echo "VERSION=$VERSION_PREFIX-$VERSION_SUFFIX" >> $GITHUB_ENV
          echo "RELEASE_IMAGE=false" >> $GITHUB_ENV
          echo "Resolved version: $VERSION"
        fi
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker image
      run: |
        docker buildx build --platform linux/arm64 --load \
          -f ./EasyTourChoice.API/easy-tour-choice.api.dockerfile \
          -t ${{ secrets.DOCKER_USERNAME }}/easy-tour-choice-backend:${{ env.VERSION }} \
          --debug .
    - name: Push Docker image
      if: github.event_name == 'push' && env.RELEASE_IMAGE == 'true'
      run: |
        docker push "${{ secrets.DOCKER_USERNAME }}/easy-tour-choice-backend:${{ env.VERSION }}"
    - name: Create tag
      if: github.event_name == 'push' && env.RELEASE_IMAGE == 'true'
      id: create_tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"

